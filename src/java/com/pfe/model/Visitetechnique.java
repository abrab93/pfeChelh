package com.pfe.model;
// Generated 1 mai 2015 23:05:25 by Hibernate Tools 4.3.1


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Visitetechnique generated by hbm2java
 */
@Entity
@Table(name="visitetechnique"
    ,catalog="gestionvehiculepfe"
    , uniqueConstraints = {@UniqueConstraint(columnNames="idCentreVisiteTechnique"), @UniqueConstraint(columnNames="idVehicule")} 
)
public class Visitetechnique  implements java.io.Serializable {


     private Integer idVisiteTechnique;
     private Centrevisitetechnique centrevisitetechnique=new Centrevisitetechnique();
     private Vehicule vehicule=new Vehicule();
     private Date dateControle;
     private double kilometrage;
     private double ripage;
     private double opacite;
     private Date dateProchaineVisite;

    public Visitetechnique() {
    }

    public Visitetechnique(Centrevisitetechnique centrevisitetechnique, Vehicule vehicule, Date dateControle, double kilometrage, double ripage, double opacite, Date dateProchaineVisite) {
       this.centrevisitetechnique = centrevisitetechnique;
       this.vehicule = vehicule;
       this.dateControle = dateControle;
       this.kilometrage = kilometrage;
       this.ripage = ripage;
       this.opacite = opacite;
       this.dateProchaineVisite = dateProchaineVisite;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idVisiteTechnique", unique=true, nullable=false)
    public Integer getIdVisiteTechnique() {
        return this.idVisiteTechnique;
    }
    
    public void setIdVisiteTechnique(Integer idVisiteTechnique) {
        this.idVisiteTechnique = idVisiteTechnique;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idCentreVisiteTechnique", unique=true, nullable=false)
    public Centrevisitetechnique getCentrevisitetechnique() {
        return this.centrevisitetechnique;
    }
    
    public void setCentrevisitetechnique(Centrevisitetechnique centrevisitetechnique) {
        this.centrevisitetechnique = centrevisitetechnique;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idVehicule", unique=true, nullable=false)
    public Vehicule getVehicule() {
        return this.vehicule;
    }
    
    public void setVehicule(Vehicule vehicule) {
        this.vehicule = vehicule;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="dateControle", nullable=false, length=10)
    public Date getDateControle() {
        return this.dateControle;
    }
    
    public void setDateControle(Date dateControle) {
        this.dateControle = dateControle;
    }

    
    @Column(name="kilometrage", nullable=false, precision=22, scale=0)
    public double getKilometrage() {
        return this.kilometrage;
    }
    
    public void setKilometrage(double kilometrage) {
        this.kilometrage = kilometrage;
    }

    
    @Column(name="ripage", nullable=false, precision=22, scale=0)
    public double getRipage() {
        return this.ripage;
    }
    
    public void setRipage(double ripage) {
        this.ripage = ripage;
    }

    
    @Column(name="opacite", nullable=false, precision=22, scale=0)
    public double getOpacite() {
        return this.opacite;
    }
    
    public void setOpacite(double opacite) {
        this.opacite = opacite;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="dateProchaineVisite", nullable=false, length=10)
    public Date getDateProchaineVisite() {
        return this.dateProchaineVisite;
    }
    
    public void setDateProchaineVisite(Date dateProchaineVisite) {
        this.dateProchaineVisite = dateProchaineVisite;
    }




}


